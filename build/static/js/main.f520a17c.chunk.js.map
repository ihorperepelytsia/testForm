{"version":3,"sources":["components/Form/Form.styled.js","components/FirstName/FirstName.jsx","components/LastName/LastName.jsx","utils/forbiddenSymbol.js","components/PhoneNumber/PhoneNumber.jsx","components/Email/Email.jsx","components/Gender/Gender.jsx","redux/user-types.js","redux/asyncActions/getAutocompleteAddress.js","components/Address/Address.jsx","redux/users-actions.js","components/Confirmation/Confirmation.jsx","components/ButtonRegister/ButtonRegister.jsx","components/UsersTable/UsersTable.styled.js","components/UsersTable/UsersTable.jsx","components/Form/Form.jsx","components/App/App.jsx","serviceWorker.js","redux/index.js","store/configureStore.js","index.js"],"names":["FormData","styled","form","Title","h3","Input","input","props","border","Label","label","Select","select","InputSubmit","Text","p","FirstName","register","required","errors","firstName","message","type","placeholder","pattern","value","LastName","lastName","forbiddenSymbol","e","target","code","preventDefault","PhoneNumber","useEffect","window","addEventListener","removeEventListener","phoneNumber","minLength","Email","email","Gender","gender","name","hidden","types","axios","defaults","baseURL","_","require","Address","dispatch","useDispatch","searchAddress","useSelector","state","autocompleteAddress","handleChange","debounce","length","a","get","res","address","data","items","payload","console","log","list","onChange","id","map","el","Confirmation","htmlFor","confirmation","ButtonRegister","Table","table","Th","th","Td","td","Tr","tr","UsersTable","users","index","Form","useForm","handleSubmit","formState","reset","onSubmit","App","Boolean","location","hostname","match","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f520a17c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormData = styled.form`\r\n  width: 300px;\r\n  margin: 0 auto 30px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 10px;\r\n  padding: 30px;\r\n  text-align: center;\r\n`;\r\nexport const Title = styled.h3`\r\n  width: 100%;\r\n  font-size: 24px;\r\n  margin: 0 0 20px 0;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  display: block;\r\n  margin: 6px 0 4px;\r\n  border: ${(props) =>\r\n    props.border ? \"2px solid red\" : \"2px solid lightgrey\"};\r\n\r\n  outline: none;\r\n  border-radius: 4px;\r\n  padding: 6px;\r\n  appearance: none;\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 16px;\r\n`;\r\nexport const Select = styled.select`\r\n  display: block;\r\n  margin: 6px auto 4px;\r\n  width: 32%;\r\n  text-align: center;\r\n  padding: 2px;\r\n  border: ${(props) =>\r\n    props.border ? \"2px solid red\" : \"2px solid lightgrey\"};\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const InputSubmit = styled.input`\r\n  display: block;\r\n  margin: 12px auto 0;\r\n  padding: 14px 24px;\r\n  border: 1px solid grey;\r\n  cursor: pointer;\r\n  transition: all linear 400ms;\r\n  background-color: lightgrey;\r\n  border-radius: 6px;\r\n\r\n  &:hover {\r\n    background-color: grey;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  height: 20px;\r\n  margin: 0;\r\n  text-align: start;\r\n  color: red;\r\n`;\r\n","import { Input, Label, Text } from \"../Form/Form.styled\";\r\nexport const FirstName = ({ label, register, required, errors }) => {\r\n  return (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Input\r\n       border={errors.firstName?.message ? true : false}\r\n        type=\"text\"\r\n        placeholder={label}\r\n        {...register(\"firstName\", {\r\n          required,\r\n          pattern: {\r\n            value: /[A-Za-z]/,\r\n            message: \"Start with a latter\", \r\n          },\r\n        })}\r\n      />\r\n      <Text>{errors.firstName?.message}</Text>\r\n    </>\r\n  );\r\n};\r\n","import { Input, Label, Text } from \"../Form/Form.styled\";\r\nexport const LastName = ({ label, register, required, pattern, errors }) => {\r\n  return (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Input\r\n        border={errors.lastName?.message ? true : false}\r\n        type=\"text\"\r\n        placeholder={label}\r\n        {...register(\"lastName\", {\r\n          required,\r\n          pattern: {\r\n            value: /[A-Za-z]/,\r\n            message: \"Start with a latter\",\r\n          },\r\n        })}\r\n      />\r\n      <Text>{errors.lastName?.message}</Text>\r\n    </>\r\n  );\r\n};\r\n","export const forbiddenSymbol = (e) => {\r\n  if (e.target.type === \"number\") {\r\n    if (e.code === \"KeyE\") {\r\n      return e.preventDefault();\r\n    }\r\n    if (e.code === \"NumpadSubtract\") {\r\n      return e.preventDefault();\r\n    }\r\n    if (e.code === \"NumpadAdd\") {\r\n      return e.preventDefault();\r\n    }\r\n    if (e.code === \"NumpadDecimal\") {\r\n      return e.preventDefault();\r\n    }\r\n    if (e.code === \"Equal\") {\r\n      return e.preventDefault();\r\n    }\r\n    if (e.code === \"Minus\") {\r\n      return e.preventDefault();\r\n    }\r\n    if (e.code === \"Period\") {\r\n      return e.preventDefault();\r\n    }\r\n    if (e.code === \"Slash\") {\r\n      return e.preventDefault();\r\n    }\r\n  }\r\n};\r\n","import { Input, Label, Text } from \"../Form/Form.styled\";\r\nimport { useEffect } from \"react\";\r\nimport { forbiddenSymbol } from \"../../utils/forbiddenSymbol\";\r\nexport const PhoneNumber = ({ label, register, required, errors }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keypress\", forbiddenSymbol);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keypress\", forbiddenSymbol);\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Input\r\n        border={errors.phoneNumber?.message ? true : false}\r\n        type=\"number\"\r\n        placeholder={label}\r\n        {...register(\"phoneNumber\", {\r\n          required,\r\n          pattern: {\r\n            value: \"^[ 0-9]+$\",\r\n            message: \"Only numbers\",\r\n          },\r\n          minLength: {\r\n            value: 7,\r\n            message: \"Min length 7\",\r\n          },\r\n        })}\r\n      />\r\n      <Text>{errors.phoneNumber?.message}</Text>\r\n    </>\r\n  );\r\n};\r\n","import { Input, Label, Text } from \"../Form/Form.styled\";\r\n\r\nexport const Email = ({ label, register, required, errors }) => {\r\n  return (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Input\r\n        border={errors.email?.message ? true : false}\r\n        type=\"text\"\r\n        placeholder={label}\r\n        {...register(\"email\", {\r\n          required,\r\n          pattern: {\r\n            value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n            message: \"Invalid to email\",\r\n          },\r\n        })}\r\n      />\r\n      <Text>{errors.email?.message}</Text>\r\n    </>\r\n  );\r\n};\r\n","import { Label, Select, Text } from \"../Form/Form.styled\";\r\n\r\nexport const Gender = ({ label, register, required, errors }) => {\r\n  return (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Select\r\n        border={errors.gender?.message ? true : false}\r\n        name=\"Gender\"\r\n        {...register(\"gender\", { required })}\r\n      >\r\n        <option value=\"\" hidden>\r\n          Gender\r\n        </option>\r\n        <option value=\"female\">Female</option>\r\n        <option value=\"male\">Male</option>undefind\r\n      </Select>\r\n      <Text>{errors.gender?.message}</Text>\r\n    </>\r\n  );\r\n};\r\n","export const types = {\r\n  ADD: \"users/add\",\r\n  AUTOCOMPLETE: \"autocomplete\",\r\n};\r\n","import axios from \"axios\";\r\nimport { autocompleteAddress } from \"../users-actions\";\r\n\r\naxios.defaults.baseURL =\r\n  \"https://autocomplete.search.hereapi.com/v1/autocomplete?languages=en-US\";\r\nconst API_KEY = \"tfZxqmeHbSedblXa7CZ3YaKrRcR6IFDlzEae0uMfwYo\";\r\n\r\nexport const getAutocompleteAddress = (value) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`&q=${value}&apiKey=${API_KEY}`);\r\n      return dispatch(autocompleteAddress(res.data.items));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import { Input, Label, Text } from \"../Form/Form.styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAutocompleteAddress } from \"../../redux/asyncActions/getAutocompleteAddress\";\r\nvar _ = require(\"lodash\");\r\n\r\nexport const Address = ({ label, register, required, errors }) => {\r\n  const dispatch = useDispatch();\r\n  const searchAddress = useSelector((state) => state.autocompleteAddress);\r\n\r\n  const handleChange = _.debounce((e) => {\r\n    if (e.target.value.length > 2) {\r\n      return dispatch(getAutocompleteAddress(e.target.value));\r\n    }\r\n  }, 500);\r\n  return (\r\n    <>\r\n      <Label>{label}</Label>\r\n      <Input\r\n        border={errors.address?.message ? true : false}\r\n        type=\"text\"\r\n        list=\"address\"\r\n        placeholder={label}\r\n        {...register(\"address\", {\r\n          required,\r\n          onChange: handleChange,\r\n        })}\r\n      />\r\n\r\n      {searchAddress.length > 0 && (\r\n        <datalist id=\"address\">\r\n          {searchAddress.map((el) => (\r\n            <option key={el.id} value={el.address.label}></option>\r\n          ))}\r\n        </datalist>\r\n      )}\r\n\r\n      <Text>{errors.address?.message}</Text>\r\n    </>\r\n  );\r\n};\r\n","import { types } from \"./user-types.js\";\r\n\r\nexport const addUsers = (users) => ({\r\n  type: types.ADD,\r\n  payload: users,\r\n});\r\n\r\nexport const autocompleteAddress = (address) => ({\r\n  type: types.AUTOCOMPLETE,\r\n  payload: address,\r\n});\r\n","import { Label, Text } from \"../Form/Form.styled\";\r\nexport const Confirmation = ({ label, register, required, errors }) => {\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"confirmation\"\r\n        {...register(\"confirmation\", { required })}\r\n      />\r\n      <Label htmlFor=\"confirmation\">{label}</Label>\r\n      <Text>{errors.confirmation?.message}</Text>\r\n    </>\r\n  );\r\n};\r\n","import { InputSubmit } from \"../Form/Form.styled\";\r\nexport const ButtonRegister = () => {\r\n  return (\r\n    <>\r\n      <InputSubmit type=\"submit\" value=\"Register\" />\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nexport const Table = styled.table`\r\n  max-width: 800px;\r\n  border-collapse: collapse;\r\n  border: 2px solid black;\r\n`;\r\nexport const Th = styled.th`\r\n  padding: 0;\r\n  text-align: center;\r\n  color: black;\r\n  background-color: grey;\r\n  border-right: 1px solid black;\r\n  padding: 10px;\r\n`;\r\nexport const Td = styled.td`\r\n  text-align: center;\r\n  color: #696969;\r\n  border-right: 1px solid black;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const Tr = styled.tr`\r\n  &:nth-child(odd) {\r\n    background-color: #eee;\r\n  }\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Table, Th, Td, Tr } from \"./UsersTable.styled\";\r\nexport const UsersTable = () => {\r\n  const users = useSelector((state) => state.users);\r\n  return (\r\n    <>\r\n      {users.length > 0 && (\r\n        <>\r\n          <Table>\r\n            <thead>\r\n              <Tr>\r\n                <Th>№</Th>\r\n                <Th>First Name</Th>\r\n                <Th>Last Name</Th>\r\n                <Th>Phone Number</Th>\r\n                <Th>Email</Th>\r\n                <Th>Gender</Th>\r\n                <Th>Address</Th>\r\n              </Tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map(\r\n                (\r\n                  { firstName, lastName, phoneNumber, email, gender, address },\r\n                  index\r\n                ) => (\r\n                  <Tr key={index + 1}>\r\n                    <Td>{index + 1}</Td>\r\n                    <Td>{firstName}</Td>\r\n                    <Td>{lastName}</Td>\r\n                    <Td>{phoneNumber}</Td>\r\n                    <Td>{email}</Td>\r\n                    <Td>{gender}</Td>\r\n                    <Td>{address}</Td>\r\n                  </Tr>\r\n                )\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\nimport { FirstName } from \"../FirstName/FirstName\";\r\nimport { LastName } from \"../LastName/LastName\";\r\nimport { PhoneNumber } from \"../PhoneNumber/PhoneNumber\";\r\nimport { Email } from \"../Email/Email\";\r\nimport { Gender } from \"../Gender/Gender\";\r\nimport { Address } from \"../Address/Address\";\r\nimport { Confirmation } from \"../Confirmation/Confirmation\";\r\nimport { ButtonRegister } from \"../ButtonRegister/ButtonRegister\";\r\nimport { UsersTable } from \"../UsersTable/UsersTable\";\r\nimport { FormData, Title } from \"./Form.styled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addUsers } from \"../../redux/users-actions\";\r\n\r\nexport const Form = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    reset();\r\n    dispatch(addUsers(data));\r\n  };\r\n  return (\r\n    <>\r\n      <FormData onSubmit={handleSubmit(onSubmit)}>\r\n        <Title>Registration form</Title>\r\n\r\n        <FirstName\r\n          label=\"First Name\"\r\n          register={register}\r\n          required=\"This is required\"\r\n          errors={errors}\r\n          minLength\r\n        />\r\n        <LastName\r\n          label=\"Last Name\"\r\n          register={register}\r\n          required=\"This is required\"\r\n          errors={errors}\r\n        />\r\n        <PhoneNumber\r\n          label=\"Phone Number\"\r\n          register={register}\r\n          required=\"This is required\"\r\n          errors={errors}\r\n        />\r\n        <Email\r\n          label=\"Email\"\r\n          register={register}\r\n          required=\"This is required\"\r\n          errors={errors}\r\n        />\r\n        <Gender\r\n          label=\"Gender\"\r\n          register={register}\r\n          required=\"This is required\"\r\n          errors={errors}\r\n        />\r\n        <Address\r\n          label=\"Address\"\r\n          register={register}\r\n          required=\"This is required\"\r\n          errors={errors}\r\n        />\r\n        <Confirmation\r\n          label=\"Confirmation of data use?\"\r\n          register={register}\r\n          required=\"This is required\"\r\n          errors={errors}\r\n        />\r\n        <ButtonRegister />\r\n      </FormData>\r\n      <UsersTable />\r\n    </>\r\n  );\r\n};\r\n","import { Form } from \"../Form/Form\";\nexport const App = () => {\n  return <Form />;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // eslint-disable-next-line\n      console.error('Error during service worker registrationOwner:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        // eslint-disable-next-line\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { types } from \"./user-types\";\n\nconst users = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    default:\n      return state;\n  }\n};\nconst autocompleteAddress = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.AUTOCOMPLETE:\n      return [...payload];\n    default:\n      return state;\n  }\n};\nexport const rootReducer = combineReducers({\n  users,\n  autocompleteAddress,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { rootReducer } from \"../redux\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\n  (process.env.NODE_ENV !== \"production\" &&\n    typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}